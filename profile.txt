export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
export CLICOLOR=1
export JAVA_HOME=/Library/Java/Home
export NODE_PATH=/usr/local/lib/node
export JSLINT_PATH=/Users/shaffenden/vim_scripts/jslint.vim
export PATH=$JAVA_HOME/bin:$PATH
export PATH=/Applications/Atlassian/atlassian-plugin-sdk-3.2.4:$PATH
export PATH=$JSLINT_PATH/bin:$PATH
export PATH=$HOME/bin:$PATH
export PATH=$HOME/.gem/ruby/1.8/bin:$PATH
export FECRU_INST=/Applications/Atlassian/atlassian-fisheye-crucible/fisheye-crucible-home
export FISHEYE_INST=$FECRU_INST
export TRUNK=https://svn.atlassian.com/svn/private/atlassian/confluence/trunk
export STABLE=https://svn.atlassian.com/svn/private/atlassian/confluence/branches/confluence_3_4_stable
export MAVEN_OPTS='-Xmx512m'
export ATLASSIAN_SCRIPTS=$HOME/src/atlassian/atlassian-scripts/trunk
export MAVEN_COLOR=true
export EDITOR='mvim -f -c "au VimLeave * !open -a Terminal"'
source $ATLASSIAN_SCRIPTS/sourceme.sh

#reset java home
alias j4='JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/1.4/Home'
alias j5='JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/1.5/Home'
alias j6='JAVA_HOME=/System/Library/Frameworks/JavaVM.framework/Versions/1.6/Home'
alias lic="cat $HOME/src/atlassian/confluence/trunk/confluence-not-shippable/src/main/resources/test-data.properties | ruby -e 'i = 0; print \$stdin.read.split(/\n\n/).grep(/CONF_COMM=/).first.gsub(/(CONF_COMM=|CONF_COMM\.SEN.*)/, \"\").gsub(/^#.*\n/,\"\").strip' | pbcopy"

# Configure colors, if available.
if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
    c_user='\[\e[1;34m\]'
    c_path='\[\e[0;35m\]'
else
    c_user=
    c_path=
fi

# Set git autocompletion and PS1 integration
if [ -f  /usr/local/Cellar/git/1.7.3.5/etc/bash_completion.d/git-completion.bash ]; then
    . /usr/local/Cellar/git/1.7.3.5/etc/bash_completion.d/git-completion.bash 
fi

GIT_PS1_SHOWDIRTYSTATE=true

if [ -f /opt/local/etc/bash_completion ]; then
    . /opt/local/etc/bash_completion
fi

if [ -f /usr/local/Cellar/bash-completion/1.2/etc/bash-completion  ]; then
    . /usr/local/Cellar/bash-completion/1.2/etc/bash-completion
fi

function parse_scm_dirty () {
  toAdd='\[\e[1;31m\]'
  noChange='\[\e[1;32m\]'
  toCommit='\[\e[1;33m\]'
  untracked='\[\e[1;35m\]'
  reset=$(tput sgr0)
  git_branch=$(git branch 2>/dev/null| sed -n '/^\*/s/^\* //p')
  
    if ! git rev-parse --git-dir > /dev/null 2>&1; then
        return 0
    fi

    dirty=0
    [[ $(git diff --shortstat 2> /dev/null | tail -n1) != "" ]] && echo -n " $toAdd$bold[$git_branch *]$reset" && dirty=1
    [[ $(git diff --cached --shortstat 2> /dev/null | tail -n1) != "" ]] && echo -n " $toCommit$bold[$git_branch +]$reset" && dirty=1
    [[ $(git status --porcelain 2>/dev/null| grep "^??" | tail -n1) != "" ]] && echo -n " $untracked$bold[$git_branch ?]$reset" && dirty=1
    if [ $dirty -eq 0 ]; then
      echo -n "$noChange$bold [$git_branch "
      echo -n 'âœ“]'
      echo -n "$reset"
    fi
}

PROMPT_COMMAND='PS1="${c_user}\u@\h [\A]${c_path}:\W\[\033[31m\]$(parse_scm_dirty)\[\033[00m\]>"'

# Nice oneline, coloured git log output with relative dates
alias gl='git log --graph --pretty=format:'\''%Cred%h%Creset - %Cgreen[%an]%Creset%C(yellow)%d%Creset: %s %Cgreen(%cr)%Creset'\'' --abbrev-commit --date=relative'
# Show the list of local branches
alias gb='git branch --color -v'
# Status
alias gt='git status'
# Changes
alias gw='git whatchanged'
# Reflog
alias grl='git reflog'
# Diff unstaged changes
alias gd='git diff --color --ignore-space-at-eol'
# Diff staged changes ("The next commit")
alias gdi='git diff --color --ignore-space-at-eol --cached'

